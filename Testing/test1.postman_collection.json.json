{
	"info": {
		"_postman_id": "5dcd7b76-8173-4a85-b691-830e38be5d84",
		"name": "test1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36760307"
	},
	"item": [
		{
			"name": "get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var Data = pm.response.json()\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Url}}/products",
					"host": [
						"{{Url}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a single product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed response time test to be 300ms\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"// Fixed response time test\r",
							"pm.test(\"response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"// Added comments and fixed syntax errors in existing tests\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    // Check for required properties\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('id');\r",
							"    pm.expect(responseData).to.have.property('title');\r",
							"    pm.expect(responseData).to.have.property('description');\r",
							"    // ... (other properties)\r",
							"});\r",
							"\r",
							"pm.test(\"Reviews array is present and has expected number of elements\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    // Check for reviews array\r",
							"    pm.expect(responseData).to.have.property('reviews').that.is.an('array').with.lengthOf(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Meta object properties are non-empty strings\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    // Check for non-empty string properties in meta object\r",
							"    pm.expect(responseData.meta).to.be.an('object');\r",
							"    pm.expect(responseData.meta.createdAt).to.be.a('string').and.to.have.lengthOf.at.least(1, \"createdAt should not be empty\");\r",
							"    // ... (similar checks for other meta properties)\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains Content-Type header with value application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Length header is present in the response\", function () {\r",
							"    pm.response.to.have.header(\"Content-Length\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Cache-Control header is included in the response\", function () {\r",
							"    pm.expect(pm.response.headers.has(\"Cache-Control\")).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate if the 'Last-Modified' header is present in the response\", function () {\r",
							"    pm.expect(pm.response.headers.has(\"Last-Modified\")).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Etag header is present in the response\", function () {\r",
							"    pm.response.to.have.header('ETag');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Url}}/products/{{id}}",
					"host": [
						"{{Url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				},
				"description": "The endpoint retrieves product details based on the provided ID.\n\nThe response returns a JSON object with the following schema:\n\n``` json\n{\n  \"id\": 0,\n  \"title\": \"\",\n  \"description\": \"\",\n  \"category\": \"\",\n  \"price\": 0,\n  \"discountPercentage\": 0,\n  \"rating\": 0,\n  \"stock\": 0,\n  \"tags\": [\"\"],\n  \"brand\": \"\",\n  \"sku\": \"\",\n  \"weight\": 0,\n  \"dimensions\": {\n    \"width\": 0,\n    \"height\": 0,\n    \"depth\": 0\n  },\n  \"warrantyInformation\": \"\",\n  \"shippingInformation\": \"\",\n  \"availabilityStatus\": \"\",\n  \"reviews\": [\n    {\n      \"rating\": 0,\n      \"comment\": \"\",\n      \"date\": \"\",\n      \"reviewerName\": \"\",\n      \"reviewerEmail\": \"\"\n    }\n  ],\n  \"returnPolicy\": \"\",\n  \"minimumOrderQuantity\": 0,\n  \"meta\": {\n    \"createdAt\": \"\",\n    \"updatedAt\": \"\",\n    \"barcode\": \"\",\n    \"qrCode\": \"\"\n  },\n  \"images\": [\"\"],\n  \"thumbnail\": \"\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "add new product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var Data = pm.response.json()\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 195,\r\n  \"title\": \"BMW Pencil\"\r\n  /* other product data */\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyjson.com/products/add",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products",
						"add"
					]
				},
				"description": "The `POST` request to `/products/add` endpoint adds a new product. Upon successful execution, the response returns a status code of 201 and a JSON object with the `id` of the newly added product.\n\n### Response\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "update product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var Data = pm.response.json()\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"title\": \"Essence Mascara Princess\",\r\n    \"description\": \"The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.\",\r\n    \"category\": \"beauty\",\r\n    \"price\": 10,\r\n    \"discountPercentage\": 7.17,\r\n    \"rating\": 4.94,\r\n    \"stock\": 5,\r\n    \"tags\": [\r\n        \"beauty\",\r\n        \"mascara\"\r\n    ],\r\n    \"brand\": \"Essence\",\r\n    \"sku\": \"RCH45Q1A\",\r\n    \"weight\": 2,\r\n    \"dimensions\": {\r\n        \"width\": 23.17,\r\n        \"height\": 14.43,\r\n        \"depth\": 28.01\r\n    },\r\n    \"warrantyInformation\": \"1 month warranty\",\r\n    \"shippingInformation\": \"Ships in 1 month\",\r\n    \"availabilityStatus\": \"Low Stock\",\r\n    \"reviews\": [\r\n        {\r\n            \"rating\": 2,\r\n            \"comment\": \"Very unhappy with my purchase!\",\r\n            \"date\": \"2024-05-23T08:56:21.618Z\",\r\n            \"reviewerName\": \"John Doe\",\r\n            \"reviewerEmail\": \"john.doe@x.dummyjson.com\"\r\n        },\r\n        {\r\n            \"rating\": 2,\r\n            \"comment\": \"Not as described!\",\r\n            \"date\": \"2024-05-23T08:56:21.618Z\",\r\n            \"reviewerName\": \"Nolan Gonzalez\",\r\n            \"reviewerEmail\": \"nolan.gonzalez@x.dummyjson.com\"\r\n        },\r\n        {\r\n            \"rating\": 5,\r\n            \"comment\": \"Very satisfied!\",\r\n            \"date\": \"2024-05-23T08:56:21.618Z\",\r\n            \"reviewerName\": \"Scarlett Wright\",\r\n            \"reviewerEmail\": \"scarlett.wright@x.dummyjson.com\"\r\n        }\r\n    ],\r\n    \"returnPolicy\": \"30 days return policy\",\r\n    \"minimumOrderQuantity\": 24,\r\n    \"meta\": {\r\n        \"createdAt\": \"2024-05-23T08:56:21.618Z\",\r\n        \"updatedAt\": \"2024-05-23T08:56:21.618Z\",\r\n        \"barcode\": \"9164035109868\",\r\n        \"qrCode\": \"https://assets.dummyjson.com/public/qr-code.png\"\r\n    },\r\n    \"images\": [\r\n        \"https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png\"\r\n    ],\r\n    \"thumbnail\": \"https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyjson.com/products/1",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products",
						"1"
					]
				},
				"description": "The endpoint retrieves product information in the form of a JSON response. The response includes various details such as product ID, title, description, category, price, discount percentage, rating, stock availability, tags, brand, SKU, weight, dimensions, warranty information, shipping information, availability status, reviews, return policy, minimum order quantity, meta information, images, and thumbnail. The response is structured in a JSON format and can be documented as a JSON schema."
			},
			"response": []
		},
		{
			"name": "update product Copy",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \r\n    \"discountPercentage\": 10\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyjson.com/products/1",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products",
						"1"
					]
				},
				"description": "The endpoint retrieves product information in the form of a JSON response. The response includes various details such as product ID, title, description, category, price, discount percentage, rating, stock availability, tags, brand, SKU, weight, dimensions, warranty information, shipping information, availability status, reviews, return policy, minimum order quantity, meta information, images, and thumbnail. The response is structured in a JSON format and can be documented as a JSON schema."
			},
			"response": []
		},
		{
			"name": "delete",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://dummyjson.com/products/5",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products",
						"5"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "",
			"type": "default"
		}
	]
}